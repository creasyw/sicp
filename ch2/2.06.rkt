#lang racket

;; "Zero" means the procedure generated by the given procedure will do
;; nothing about its input parameter, which could be either a number
;; or another procedure
(define zero (lambda (f) (lambda (x) x)))

;; "Add-1" means "successor of n", that is $f^{n+1}(x) = f(f^n(x))$
;; https://en.wikipedia.org/wiki/Church_encoding#Computation_with_Church_numerals
(define (add-1 n)
  (lambda (f) (lambda (x) (f ((n f) x)))))

(define one
  (lambda (f) (lambda (x) (f x))))

(define two
  (lambda (f) (lambda (x) (f (f x)))))

;; $f^{m+n}(x) = f^m(f^n(x))$
(define (add m n)
  (lambda (f) (lambda (x)
                ((m f) ((n f) x)))))
